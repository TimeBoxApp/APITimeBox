name: Build on DockerHub and Deploy to AWS

on:
  push:
    branches:
      - main
env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
  SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./
          push: true
          target: prod
          dockerfile: ./Dockerfile
          build-args: |
            DATABASE_NAME=${{ secrets.DATABASE_NAME }}
            DATABASE_HOST=${{ secrets.DATABASE_HOST }}
            DATABASE_USER=${{ secrets.DATABASE_USER }}
            DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            SESSION_SECRET=${{ secrets.SESSION_SECRET }}
          tags: kkulykk/timebox-api:latest
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Set permissions for private key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > key.pem
          chmod 600 key.pem

      - name: Remove all Docker images
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.SERVER_ADDRESS }} 'sudo docker rmi $(sudo docker images -q) -f || true'

      - name: Pull Docker image
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.SERVER_ADDRESS }} 'sudo docker pull kkulykk/timebox-api:latest'

      - name: Stop running container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.SERVER_ADDRESS }} 'sudo docker stop timebox-api || true'
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.SERVER_ADDRESS }} 'sudo docker rm timebox-api || true'

      - name: Run new container
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem ${{ env.SERVER_ADDRESS }} 'sudo docker run -d --name timebox-api -p 80:3000 kkulykk/timebox-api:latest'
